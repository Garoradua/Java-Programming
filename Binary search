//{ Driver Code Starts
import java.util.*;
import java.lang.*;
import java.io.*;

class gfg
{
    
    public static void main(String args[])throws IOException
    {
        BufferedReader read = new BufferedReader(new InputStreamReader(System.in));
        int t = Integer.parseInt(read.readLine());
        
        while(t-- > 0)
        {
            String s[] = read.readLine().trim().split("\\s+");
            
            int n = Integer.parseInt(s[0]);
            int k = Integer.parseInt(s[1]);
            
            int arr[] = new int[n];
            
            String st[] = read.readLine().trim().split("\\s+");
            
            for(int i = 0; i < n; i++)
            {
                arr[i] = Integer.parseInt(st[i]);
            }
            
            Solution obj = new Solution();
            
            System.out.println(obj.searchInSorted(arr, n, k));
        }
    }
}
// } Driver Code Ends


class Solution{
    static int searchInSorted(int arr[], int N, int K)
    {
        
        // Your code here
        return (binarysearch(0, N-1, K, arr));
        
    }
    public static int binarysearch(int start, int end, int K, int[] arr){
        if(start>end) return -1;
        int medium = start + (end-start)/2;
        
        if(arr[medium] == K) return 1;
        else if(K > arr[medium]){
           return binarysearch(medium+1, end, K, arr);
        }else{
           return binarysearch(start, medium-1, K, arr);
        }
        
    }
}
